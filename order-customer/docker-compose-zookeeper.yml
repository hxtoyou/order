version: '3.1'
services:
  zoo1:
    image: zookeeper
    restart: always
    networks:
      - mynet
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  zoo2:
    image: zookeeper
    restart: always
    networks:
      - mynet
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  zoo3:
    image: zookeeper
    restart: always
    networks:
      - mynet
    ports:
      - 2184:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  kafka-0:
    container_name: kafka-0
    image: bitnami/kafka:latest # kafka没有官方镜像，用了个star多的
    restart: always
    volumes:
      - /opt/kafka/kafka0/config:/opt/bitnami/kafka/config
      - /opt/kafka/kafka0/logs:/opt/bitnami/kafka/logs
    networks:
      - mynet
    depends_on:
      - zoo1
      - zoo2
      - zoo3 # zookeeper创建完之后才会创建当前service
    ports:
      - 9090:9090
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-0 # 广播主机名称，因为docker-compose会自动创建docker网络，所以可以不用ip
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181/kafka,zoo2:2181/kafka,zoo3:2181/kafka # zookeeper连接地址 /kafka 方便目录树操作
      KAFKA_LISTENERS: PLAINTEXT://:9090 # kafka启动的ip:port
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.5:9090 # kafka广播地址ip:port
      KAFKA_BROKER_ID: 0 # brokerId，必须保证集群中的Id都不相同
      ALLOW_PLAINTEXT_LISTENER: 'yes'
  kafka-1:
    container_name: kafka-1
    image: bitnami/kafka:latest
    volumes:
      - /opt/kafka/kafka1/config:/opt/bitnami/kafka/config
      - /opt/kafka/kafka1/logs:/opt/bitnami/kafka/logs
    restart: always
    networks:
      - mynet
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
      - 9091:9091
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-1
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181/kafka,zoo2:2181/kafka,zoo3:2181/kafka
      KAFKA_LISTENERS: PLAINTEXT://:9091
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.5:9091
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: 'yes'
  kafka-2:
    container_name: kafka-2
    image: bitnami/kafka:latest
    restart: always
    volumes:
      - /opt/kafka/kafka2/config:/opt/bitnami/kafka/config
      - /opt/kafka/kafka2/logs:/opt/bitnami/kafka/logs
    networks:
      - mynet
    depends_on:
      - zoo1
      - zoo2
      - zoo3 # zookeeper创建完之后才会创建当前service
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-2
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181/kafka,zoo2:2181/kafka,zoo3:2181/kafka
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.5:9092
      KAFKA_BROKER_ID: 2
      ALLOW_PLAINTEXT_LISTENER: 'yes'
networks:
  mynet:
    external: true
